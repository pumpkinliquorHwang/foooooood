<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qna">

	<!-- resultMap : MemberQna -->
	<resultMap type="map" id="memberQna"></resultMap>	
	<!-- resultMap : MemberQnaReview -->
	<resultMap type="map" id="memberQnaReview"></resultMap>

	
	<!-- 회원 문의 관련 Mapper -->

	<!-- 회원 문의 리스트 -->
	<select id="selectMemberQnaList" resultType="memberQna">
		SELECT 
			mq.*, m.memberId, (SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) AS isRe 	<!-- isRe : 댓글 여부 (0 : 대기, 0 이상 : 완료 -->
		FROM 
			MEMBER_QNA mq JOIN MEMBER m ON(mq.memberNum = m.memberNum) 
		ORDER BY 
			isRe ASC, writeDate DESC, qnaCategory DESC 
	</select>
	
	<!-- 회원 문의 보기 -->
	<select id="selectMemberQna" parameterType="_int" resultType="memberQna">
		SELECT mq.*, m.memberId FROM MEMBER_QNA mq JOIN MEMBER m ON(mq.memberNum = m.memberNum) WHERE qnaCode = #{no}
	</select>

	<!-- 회원 문의 첨부파일 -->
	<select id="selectMemberQnaAttach" parameterType="_int" resultType="map">
		SELECT * FROM MEMBER_QNA_ATTACHMENT WHERE qnaCode = #{no}
	</select>

	<!-- 회원 문의 답변 보기 -->
	<select id="selectMemberQnaReview" parameterType="_int" resultType="memberQnaReview">
		SELECT * FROM MEMBER_QNA_REVIEW WHERE qnaCode = #{no}
	</select>
	
	<!-- 회원 문의 답변 등록 -->
	<insert id="insertMemberQnaReview" parameterType="map">
		INSERT INTO MEMBER_QNA_REVIEW VALUES(#{no}, SYSDATE+9/24, #{context})
	</insert>

	<!-- 회원 문의 답변 삭제 -->
	<delete id="deleteMemberQnaReview" parameterType="_int">
		DELETE FROM MEMBER_QNA_REVIEW WHERE qnaCode = #{no}
	</delete>
	
	<!-- 회원 문의 답변 수정 -->
	<update id="updateMemberQnaReview" parameterType="map">
		UPDATE MEMBER_QNA_REVIEW SET reviewContext = #{context} WHERE qnaCode = #{no}
	</update>
	
	<!-- 회원 문의 검색 -->
	<select id="searchMemberQna" parameterType="map" resultType="memberQna">
		SELECT 
			mq.*, m.memberId, (SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) AS isRe 
		FROM 
			MEMBER_QNA mq JOIN MEMBER m ON(mq.memberNum = m.memberNum) 
		WHERE 
			qnaTitle LIKE '%'||#{keyword}||'%'		<!-- 키워드 조건 -->
		AND 
			<choose>
				<when test="isRe eq 0">		<!-- 답변 대기 -->
					(SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) = 0
				</when>
				<when test="isRe eq 1">		<!-- 답변 완료 -->
					(SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) > 0
				</when>
				<otherwise>					<!-- 전체 -->
					1 = 1
				</otherwise>
			</choose>
		AND
			<choose>
				<when test="category eq '전체'">	<!-- 카테고리 전체 -->
					1 = 1
				</when>
				<otherwise>
					qnaCategory = #{category}	<!-- 선택 카테고리 -->
				</otherwise>
			</choose>
		ORDER BY 
			isRe ASC, writeDate DESC, qnaCategory DESC
			<!-- <foreach collection="category" item="cate" index="i" open="(" close=")" separator="OR">
				qnaCategory = #{cate}
			</foreach> -->
	</select>
	
	<!-- 회원 문의글 삭제 -->
	<delete id="deleteMemberQna" parameterType="_int">
		DELETE FROM MEMBER_QNA WHERE qnaCode=#{no}
	</delete>	
	
	<!-- 문의 count -->
	<select id="selectMemberQnaCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER_QNA
	</select>
	
	<!-- 검색 문의 count -->
	<select id="selectSearchMemberQnaCount" resultType="_int" parameterType="map">
		SELECT COUNT(*) 
		FROM (	SELECT mq.*, m.memberId, (SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) AS isRe 
				FROM MEMBER_QNA mq JOIN MEMBER m ON(mq.memberNum = m.memberNum) 
				WHERE 
					qnaTitle LIKE '%'||#{keyword}||'%'
				AND 
					<choose>
						<when test="isRe eq 0">
							(SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) = 0
						</when>
						<when test="isRe eq 1">
							(SELECT COUNT(*) FROM MEMBER_QNA_REVIEW r JOIN MEMBER_QNA ON(r.qnaCode = mq.qnaCode)) > 0
						</when>
						<otherwise>
							1 = 1
						</otherwise>
					</choose>
				AND
					<choose>
						<when test="category eq '전체'">
							1 = 1
						</when>
						<otherwise>
							qnaCategory = #{category}
						</otherwise>
					</choose>
		)		
	</select>
	
	
	
	
	
	<!-- 사장 문의 관련 Mapper -->


	<!-- 사장 문의 리스트 -->
	<select id="selectOwnerQnaList" resultType="com.kh.food.qna.model.vo.OwnerQna">
		SELECT 
			oq.*, o.ownerId, (SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) AS isRe 	<!-- isRe : 댓글 여부 (0 : 대기, 0 이상 : 완료 -->
		FROM 
			OWNER_QNA oq JOIN OWNER o ON(oq.ownerNum = o.ownerNum) 
		ORDER BY 
			isRe ASC, writeDate DESC, qnaCategory DESC 
	</select>
	
	<!-- 사장 문의 보기 -->
	<select id="selectOwnerQna" parameterType="_int" resultType="com.kh.food.qna.model.vo.OwnerQna">
		SELECT oq.*, o.ownerId FROM OWNER_QNA oq JOIN OWNER o ON(oq.ownerNum = o.ownerNum) WHERE qnaCode = #{no}
	</select>
	
	<!-- 사장 문의 첨부파일 -->
	<select id="selectOwnerQnaAttach" parameterType="_int" resultType="map">
		SELECT * FROM OWNER_QNA_ATTACHMENT WHERE qnaCode = #{no}
	</select>

	<!-- 사장 문의 답변 보기 -->
	<select id="selectOwnerQnaReview" parameterType="_int" resultType="com.kh.food.qna.model.vo.OwnerQnaReview">
		SELECT * FROM OWNER_QNA_REVIEW WHERE qnaCode = #{no}
	</select>
	
	<!-- 사장 문의 답변 등록 -->
	<insert id="insertOwnerQnaReview" parameterType="map">
		INSERT INTO OWNER_QNA_REVIEW VALUES(#{no}, SYSDATE+9/24, #{context})
	</insert>

	<!-- 사장 문의 답변 삭제 -->
	<delete id="deleteOwnerQnaReview" parameterType="_int">
		DELETE FROM OWNER_QNA_REVIEW WHERE qnaCode = #{no}
	</delete>
	
	<!-- 사장 문의 답변 수정 -->
	<update id="updateOwnerQnaReview" parameterType="map">
		UPDATE OWNER_QNA_REVIEW SET reviewContext = #{context} WHERE qnaCode = #{no}
	</update>
	
	<!-- 사장 문의 검색 -->
	<select id="searchOwnerQna" parameterType="map" resultType="com.kh.food.qna.model.vo.OwnerQna">
		SELECT 
			oq.*, o.ownerId, (SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) AS isRe 
		FROM 
			OWNER_QNA oq JOIN OWNER o ON(oq.ownerNum = o.ownerNum) 
		WHERE 
			qnaTitle LIKE '%'||#{keyword}||'%'		<!-- 키워드 조건 -->
		AND 
			<choose>
				<when test="isRe eq 0">		<!-- 답변 대기 -->
					(SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) = 0
				</when>
				<when test="isRe eq 1">		<!-- 답변 완료 -->
					(SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) > 0
				</when>
				<otherwise>					<!-- 전체 -->
					1 = 1
				</otherwise>
			</choose>
		AND
			<choose>
				<when test="category eq '전체'">	<!-- 카테고리 전체 -->
					1 = 1
				</when>
				<otherwise>
					qnaCategory = #{category}	<!-- 선택 카테고리 -->
				</otherwise>
			</choose>
		ORDER BY 
			isRe ASC, writeDate DESC, qnaCategory DESC
			<!-- <foreach collection="category" item="cate" index="i" open="(" close=")" separator="OR">
				qnaCategory = #{cate}
			</foreach> -->
	</select>
	
	<!-- 사장 문의글 삭제 -->
	<delete id="deleteOwnerQna" parameterType="_int">
		DELETE FROM OWNER_QNA WHERE qnaCode=#{no}
	</delete>	
	
	<!-- 문의 count -->
	<select id="selectOwnerQnaCount" resultType="_int">
		SELECT COUNT(*) FROM OWNER_QNA
	</select>
	
	<!-- 검색 문의 count -->
	<select id="selectSearchOwnerQnaCount" resultType="_int" parameterType="map">
		SELECT COUNT(*) 
		FROM (	SELECT oq.*, o.ownerId, (SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) AS isRe 
				FROM OWNER_QNA oq JOIN OWNER o ON(oq.ownerNum = o.ownerNum) 
				WHERE 
					qnaTitle LIKE '%'||#{keyword}||'%'
				AND 
					<choose>
						<when test="isRe eq 0">
							(SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) = 0
						</when>
						<when test="isRe eq 1">
							(SELECT COUNT(*) FROM OWNER_QNA_REVIEW r JOIN OWNER_QNA ON(r.qnaCode = oq.qnaCode)) > 0
						</when>
						<otherwise>
							1 = 1
						</otherwise>
					</choose>
				AND
					<choose>
						<when test="category eq '전체'">
							1 = 1
						</when>
						<otherwise>
							qnaCategory = #{category}
						</otherwise>
					</choose>
		)		
	</select>	
	
	
</mapper>
